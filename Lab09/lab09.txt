9.1 
a.What good has this bundling done? How big is the new bundle file? Check the Chrome DevTools network log to see what files are being loaded.
This bundling reduces the number of files loading to the page. The new bundle file is about 1.3 MB. There is only one bundle.js file loaded. 
b.What role did Babel play in the bundling?
Bable is a transpiler that contains all necessary files into one file. 
c. Can you just load file:///path��/index.html using the browser? Why or why not?
No. Because it needs something to send data into the web server. 
d. In webpack.config.js, what does the loader test entry test: /\.jsx?$/ do?
It gives information about the file extension that should be run in the loader. 

9.2
a. Check out the new dist/index.html and dist/bundle.js. How are they different from the previous versions?
dist/index.html looks the same. dist/bundle.js contains script files and other package needed in the file. 
b. What good is it to replace the CDN library loads with module imports?
Because it reduces the size of the data that are imported. 
c. Check the network log. How many of the new modules you built are being loaded? How about the CSS file?
1 module. There is no css file. 

9.3 
a. Try out both ports and explain the difference between them.
    localhost:3001 — Try editing one of the React module files. Explain what happens, both to the displayed SPA webpage and to the bundle/index files.
    localhost:3000 — Try loading /api/comments. Explain what you get. Does the SPA page running on this port change (due to the edits made above) as well?
For more information on this two-server configuration, see Webpack’s HMR & React-Hot-Loader — The Missing Manual.
displayed SPA webpage is
--localhost:3001: it changes the website but does not update bundel/index files until I compile the changes. 
--localhost:3000: I get a list of comments when I load /api/comments. It does not chagne due to the edits made previously. 
b. Is it worth all this trouble to build a development configuration?
Yes. 